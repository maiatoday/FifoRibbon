apply plugin: 'com.android.application'

android {
    compileSdkVersion sdkVer
    buildToolsVersion buildToolsVer

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion sdkVer
        versionCode 4
        versionName "1.0.4"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.google.android.gms:play-services-plus:$rootProject.playServicesVersion"
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def configName = 'release'
        if (propsFile.exists()) {
            println "Found keystore.properties file"
//            // Debug println
//            def props = new Properties()
//            props.load(new FileInputStream(propsFile))
//            props.each { key, val ->
//                println "property name=${key} value=${val}"
//            }
        }
//        def keyStoreFile = file("somefile.keystore")
//        if (keyStoreFile.exists()) {
//            println "--- found the somefile.keystore file"
//        }
        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            println "Setting up signing properties for $configName"
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}
